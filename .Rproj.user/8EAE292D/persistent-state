activeEnvironmentName="R_GlobalEnv"
build-last-errors="[]"
build-last-errors-base-dir="~/Github/occClassifyR/"
build-last-outputs="[{\"type\":0,\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source occClassifyR\\n\\n\"},{\"type\":1,\"output\":\"* installing to library ‘/Library/Frameworks/R.framework/Versions/4.0/Resources/library’\\n\"},{\"type\":1,\"output\":\"* installing *source* package ‘occProfileR’ ...\\n\"},{\"type\":1,\"output\":\"** using staged installation\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** R\\n\"},{\"type\":1,\"output\":\"** inst\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** installing help indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** building package indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** installing vignettes\\n\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\n\"},{\"type\":1,\"output\":\"* DONE (occProfileR)\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"d50522921d7c48e1933410f52906230b\",\"input\":\"institutionLocality\",\"path\":\"~/Github/occClassifyR\",\"regex\":false,\"ignoreCase\":true,\"results\":{\"file\":[\"~/Github/occClassifyR/man/institutionLocality.Rd\",\"~/Github/occClassifyR/man/institutionLocality.Rd\",\"~/Github/occClassifyR/man/institutionLocality.Rd\",\"~/Github/occClassifyR/vignettes/myRmdTry.Rmd\",\"~/Github/occClassifyR/vignettes/myRmdTry.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/NAMESPACE\",\"~/Github/occClassifyR/inst/ext/DefaultSettingsList.R\",\"~/Github/occClassifyR/inst/ext/DefaultSettingsList.R\",\"~/Github/occClassifyR/inst/ext/Workflow_GradingScheme.R\",\"~/Github/occClassifyR/inst/ext/Workflow_GradingScheme.R\",\"~/Github/occClassifyR/inst/ext/ParamsExample.R\"],\"line\":[3,4,7,24,25,146,147,197,198,304,318,319,153,167,168,94,95,542,544,545,664,94,95,514,515,516,628,767,82,83,831,841,842,843,844,845,846,847,880,881,882,896,897,898,902,15,62,63,10,21,31],\"lineValue\":[\"\\\\name{institutionLocality}\",\"\\\\alias{institutionLocality}\",\"institutionLocality(\",\"\\\\$institutionAnalysis\\\\$doInstitutionLocality | whether the user wants to do perform the analysis of records potentialy in biodiversity institutions | logical. Dafaults to T\",\"\\\\$institutionAnalysis\\\\$methodInstitutionLocality | methods to use to detect records  in biodiversity institutions Implemented are: 'fromBotanicLocalityName','fromCoordinates', 'all' | character. Defaults to 'all'\",\"*institutionLocality_fromBotanicLocalityName_test* is a test (1/0) that tries to identify records located in biodiversity institutions, with the specific method of interpreting locality names using a set of keywords.\",\"*institutionLocality_score* summarizes all the test to identify records located in biodiversity institutions an outputs a value from 0 to 1. A value of 0.5 would indicate that half of the methods used indicate that is an insitution locality.\",\"\\\\$institutionAnalysis\\\\$doInstitutionLocality | whether the user wants to do perform the analysis of records potentialy in biodiversity institutions | logical. Dafaults to T\",\"\\\\$institutionAnalysis\\\\$methodInstitutionLocality | methods to use to detect records  in biodiversity institutions Implemented are: 'fromBotanicLocalityName','fromCoordinates', 'all' | character. Defaults to 'all'\",\"| institutionLocality  | is record found near an institution (GBIF, botanic garden)? |\",\"| institutionLocality    |'fromBotanicLocalityName' using text recognition pattern to identify different names associated with botanical records in the field locality  |\",\"| institutionLocality    |'fromCoordinates' matching coordinates of the record with known institution coordinates  |\",\"| institutionLocality  | is record found near an institution (GBIF, botanic garden)? |\",\"| institutionLocality    |'fromBotanicLocalityName' using text recognition pattern to identify different names associated with botanical records in the field locality  |\",\"| institutionLocality    |'fromCoordinates' matching coordinates of the record with known institution coordinates  |\",\"doInstitutionLocality = analysisSettings$institutionAnalysis$doInstitutionLocality\",\"methodInstitutionLocality = analysisSettings$institutionAnalysis$methodInstitutionLocality\",\"Analysis.3 <- institutionLocality (df=dat,xf = x.field,yf=y.field,\",\"do = doInstitutionLocality,\",\"method = methodInstitutionLocality)\",\"#   grade.E <- (.lazylogic (e = 'HumanDetection_score >= test.strictness.value')) | (.lazylogic (e = 'institutionLocality_score >= test.strictness.value')) | (.lazylogic (e = 'centroidDetection_score >= test.strictness.value')) | (.lazylogic (e = 'unknownRange_score >= test.strictness.value')) | (.l...\",\"doInstitutionLocality = analysisSettings$institutionAnalysis$doInstitutionLocality\",\"methodInstitutionLocality = analysisSettings$institutionAnalysis$methodInstitutionLocality\",\"Analysis.3 <- institutionLocality (df=dat,lf=l.field,xf = x.field,yf=y.field,\",\"do = doInstitutionLocality,\",\"method = methodInstitutionLocality)\",\"grade.E <- (.lazylogic (e = 'HumanDetection_score >= test.strictness.value')) | (.lazylogic (e = 'institutionLocality_score >= test.strictness.value')) | (.lazylogic (e = 'centroidDetection_score >= test.strictness.value')) | (.lazylogic (e = 'unknownRange_score >= test.strictness.value')) | (.lazyl...\",\"\\\"countryStatusRangeAnalysis_score\\\", \\\"centroidDetection_score\\\" ,\\\"HumanDetection_score\\\" ,\\\"institutionLocality_score\\\",\",\"institutionAnalysis = list (doInstitutionLocality=T,\",\"methodInstitutionLocality='all'\",\"institutionLocality <- function (df=dat,\",\"out = data.frame (institutionLocality_fromBotanicLocalityName_value=NA,\",\"institutionLocality_fromBotanicLocalityName_test=NA,\",\"institutionLocality_fromBotanicLocalityName_comments=NA,\",\"institutionLocality_fromCoordinates_value=NA,\",\"institutionLocality_fromCoordinates_test=NA,\",\"institutionLocality_fromCoordinates_comments=NA,\",\"institutionLocality_score=NA\",\"out$institutionLocality_fromBotanicLocalityName_value = bot.garden\",\"out$institutionLocality_fromBotanicLocalityName_test = as.logical (bot.garden)\",\"out$institutionLocality_fromBotanicLocalityName_comments = 'likely botanical garden'\",\"out$institutionLocality_fromCoordinates_value = ifelse ((cc_gbif_test==1 | cc_inst_test==1),1,0)\",\"out$institutionLocality_fromCoordinates_test = as.logical (ifelse ((cc_gbif_test==1 | cc_inst_test==1),1,0))\",\"out$institutionLocality_fromCoordinates_comments = occProfileR:::.paste3(cc_gbif_comments,cc_inst_comments)\",\"out$institutionLocality_score <- occProfileR:::.gimme.score (out)\",\"export(institutionLocality)\",\"institutionAnalysis = list (doInstitutionLocality=T,\",\"methodInstitutionLocality='all'\",\"#   E= \\\"(.lazylogic (e = 'HumanDetection_score >= test.strictness.value')) | (.lazylogic (e = 'institutionLocality_score >= test.strictness.value')) | (.lazylogic (e = 'centroidDetection_score >= test.strictness.value')) | (.lazylogic (e = 'unknownRange_score >= test.strictness.value')) | (.lazylogi...\",\"#          \\\"if(.lazylogic (e = 'institutionLocality_score >= test.strictness.value'))  {'instituionLocation'}\\\",\",\"do.HumanDetection=T ; do.institutionLocality=T ; institutionLocality.method='all'; do.geoOutliers=T ; geoOutliers.method='all'\"],\"matchOn\":[[6],[7],[0],[25],[29],[1],[1],[25],[29],[2],[2],[2],[2],[2],[2],[2,63],[6,71],[14],[7],[15],[102],[2,63],[6,71],[14],[7],[15],[98],[88],[30],[6],[0],[18],[0],[0],[0],[0],[0],[0],[4],[4],[4],[4],[4],[4],[4],[7],[30],[6],[95],[32],[25,49]],\"matchOff\":[[25],[26],[19],[44],[48],[20],[20],[44],[48],[21],[21],[21],[21],[21],[21],[21,82],[25,90],[33],[26],[34],[121],[21,82],[25,90],[33],[26],[34],[117],[107],[49],[25],[19],[37],[19],[19],[19],[19],[19],[19],[23],[23],[23],[23],[23],[23],[23],[26],[49],[25],[114],[51],[44,68]],\"replaceMatchOn\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"replaceMatchOff\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"

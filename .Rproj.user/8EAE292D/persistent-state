activeEnvironmentName="R_GlobalEnv"
build-last-errors="[]"
build-last-errors-base-dir="~/Github/occClassifyR/"
build-last-outputs="[{\"type\":0,\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source occClassifyR\\n\\n\"},{\"type\":1,\"output\":\"* installing to library ‘/Library/Frameworks/R.framework/Versions/4.0/Resources/library’\\n\"},{\"type\":1,\"output\":\"* installing *source* package ‘occTest’ ...\\n\"},{\"type\":1,\"output\":\"** using staged installation\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** R\\n\"},{\"type\":1,\"output\":\"** inst\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** installing help indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** building package indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** installing vignettes\\n\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\n\"},{\"type\":1,\"output\":\"* DONE (occTest)\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"fbe2eb28303641e19ad71d315e5668c4\",\"input\":\"countries.shapefile\",\"path\":\"~/Github/occClassifyR\",\"regex\":false,\"ignoreCase\":true,\"results\":{\"file\":[\"~/Github/occClassifyR/man/countryStatusRangeAnalysis.Rd\",\"~/Github/occClassifyR/man/countryStatusRangeAnalysis.Rd\",\"~/Github/occClassifyR/man/centroidDetection.Rd\",\"~/Github/occClassifyR/man/dot-coords2country.Rd\",\"~/Github/occClassifyR/man/dot-check.geospatial.data.Rd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/R/F_Geo.R\",\"~/Github/occClassifyR/R/F_Geo.R\",\"~/Github/occClassifyR/R/F_Geo.R\",\"~/Github/occClassifyR/R/F_Geo.R\",\"~/Github/occClassifyR/R/F_Geo.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Checks.R\",\"~/Github/occClassifyR/inst/ext/example.R\",\"~/Github/occClassifyR/inst/ext/ToDos.Rmd\",\"~/Github/occClassifyR/inst/ext/DefaultSettingsList.R\",\"~/Github/occClassifyR/inst/ext/Example_SpLike.R\",\"~/Github/occClassifyR/inst/ext/Example_SpLike.R\",\"~/Github/occClassifyR/inst/ext/Example_SpLike.R\",\"~/Github/occClassifyR/inst/ext/Example_SpLike.R\",\"~/Github/occClassifyR/inst/ext/Example_SpLike.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example2.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example2.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example2.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example2.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example2.R\",\"~/Github/occClassifyR/inst/ext/Scripts/Examples/Example1.R\",\"~/Github/occClassifyR/inst/ext/Scripts/knit1.Rmd\",\"~/Github/occClassifyR/inst/ext/Scripts/knit1.Rmd\",\"~/Github/occClassifyR/inst/ext/Scripts/knit1.Rmd\",\"~/Github/occClassifyR/inst/ext/Scripts/knit1.html\",\"~/Github/occClassifyR/inst/ext/Scripts/knit1.html\",\"~/Github/occClassifyR/inst/ext/Example1_CM.R\",\"~/Github/occClassifyR/inst/ext/ParamsExample.R\",\"~/Github/occClassifyR/inst/ext/ParamsExample.R\"],\"line\":[15,38,17,9,10,472,261,333,402,432,469,15,16,17,18,20,78,157,470,471,525,79,153,442,443,494,64,255,277,305,317,319,321,329,447,501,503,505,512,4,48,9,44,55,110,163,187,222,42,92,136,163,197,25,73,74,111,182,183,22,24,41],\"lineValue\":[\".countries.shapefile = countries.shapefile,\",\"\\\\item{.countries.shapefile}{spatialPolygonDataFrame indicating countries}\",\".countries.shapefile = countries.shapefile,\",\".countries.shapefile = NULL,\",\"\\\\item{list.geospatial.objects}{A list of geospatial objects.Default list includes: 'countries.shapefile','r.env','r.dem','ras.hii','points.proj4string'}\",\"mySettings$analysisSettings$rangeAnalysis$countries.shapefile <-countries.pol\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"<!--                                   countries.shapefile = countries.pol, -->\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\".coords2country = function(xydat,.countries.shapefile=NULL,.points.proj4string=NULL,ctryNameField=NULL,verbose=F){\",\"if (is.null(.countries.shapefile)) {   .countries.shapefile = rworldmap:::getMap(resolution='high') ;  ctryNameField ='ISO3'}\",\"if (!class(.countries.shapefile)== 'SpatialPolygonsDataFrame') {stop (\\\".countries shapefile not loaded \\\")}\",\"if (is.null(.points.proj4string)) {.points.proj4string <- .countries.shapefile@proj4string; if(verbose) print (paste ('ASSUMING points in projection',.countries.shapefile@proj4string))}\",\"overlay.sp.xydat = sp:::over(sp.xydat, .countries.shapefile)\",\"countries.shapefile = analysisSettings$rangeAnalysis$countries.shapefile\",\"potential.geosp.objects <- list(countries.shapefile,\",\".countries.shapefile =\",\"countries.shapefile,\",\".countries.shapefile = countries.shapefile,\",\"countries.shapefile = analysisSettings$rangeAnalysis$countries.shapefile\",\"potential.geosp.objects <- list(countries.shapefile,\",\".countries.shapefile =\",\"countries.shapefile,\",\".countries.shapefile = countries.shapefile,\",\"countries.shapefile=rnaturalearth::ne_countries(),\",\"#' @param .countries.shapefile spatialPolygonDataFrame indicating countries\",\".countries.shapefile=countries.shapefile,\",\"# .countries.shapefile=countries.shapefile;cfsf = countryfield.shapefile;exclude.unknown.ranges = F;\",\"if (!is.null(.countries.shapefile)){\",\"if (is.null(.points.proj4string)) {.points.proj4string <- .countries.shapefile@proj4string; if(verbose) print (paste ('ASSUMING points in projection',.countries.shapefile@proj4string))}\",\"overlay.sp.xydat <- sp:::over(sp.xydat, .countries.shapefile)\",\"if (is.null(.countries.shapefile)){\",\".countries.shapefile=countries.shapefile,\",\"if (!is.null(.countries.shapefile)){\",\"if (is.null(.points.proj4string)) {.points.proj4string <- .countries.shapefile@proj4string; if(verbose) print (paste ('ASSUMING points in projection',.countries.shapefile@proj4string))}\",\"overlay.sp.xydat <- sp:::over(sp.xydat, .countries.shapefile)\",\"if (is.null(.countries.shapefile)){\",\"#' @param list.geospatial.objects A list of geospatial objects.Default list includes: 'countries.shapefile','r.env','r.dem','ras.hii','points.proj4string'\",\"countries.shapefile = countries.pol,\",\"2. add automatically load countryloadpol  ==> line   if (is.null(countries.shapefile)) in F_workflow\",\"countries.shapefile=rnaturalearth::ne_countries(),\",\"countries.shapefile = NULL,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"countries.shapefile = countries.pol,\",\"**_countries.shapefile_** : SpatialPolygonsDataframe. Country borders with associated data on country name, etc. etc.\",\"**_countryfield.shapefile_** : character. Name of the field in **_countries.shapefile_** where the 3 letter ISO is stored. Default is \\\"ISO\\\".\",\"countries.shapefile = countries.pol,\",\"<strong><em>countries.shapefile</em></strong> : SpatialPolygonsDataframe. Country borders with associated data on country name, etc. etc.<br />\",\"<strong><em>countryfield.shapefile</em></strong> : character. Name of the field in <strong><em>countries.shapefile</em></strong> where the 3 letter ISO is stored. Default is “ISO”.<br />\",\"countries.shapefile = countries.pol,\",\"countries.shapefile;countryfield.shapefile = 'ISO';ntv.ctry; inv.ctry; ras.hii;\",\"countries.shapefile = countries.pol;\"],\"matchOn\":[[1,23],[7],[1,23],[1],[84],[42],[0],[0],[39],[0],[0],[34],[13,40],[12],[59,151],[40],[0,53],[32],[1],[0],[1,23],[0,53],[32],[1],[0],[1,23],[0],[11],[1,21],[3,23],[14],[59,151],[41],[13],[1,21],[14],[59,151],[41],[13],[87],[0],[65],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[3],[66],[0],[12],[95],[0],[0],[0]],\"matchOff\":[[20,42],[26],[20,42],[20],[103],[61],[19],[19],[58],[19],[19],[53],[32,59],[31],[78,170],[59],[19,72],[51],[20],[19],[20,42],[19,72],[51],[20],[19],[20,42],[19],[30],[20,40],[22,42],[33],[78,170],[60],[32],[20,40],[33],[78,170],[60],[32],[106],[19],[84],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[22],[85],[19],[31],[114],[19],[19],[19]],\"replaceMatchOn\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"replaceMatchOff\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"

activeEnvironmentName="R_GlobalEnv"
build-last-errors="[]"
build-last-errors-base-dir="~/Github/occClassifyR/"
build-last-outputs="[{\"type\":0,\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source occClassifyR\\n\\n\"},{\"type\":1,\"output\":\"* installing to library ‘/Library/Frameworks/R.framework/Versions/4.0/Resources/library’\\n\"},{\"type\":1,\"output\":\"* installing *source* package ‘occTest’ ...\\n\"},{\"type\":1,\"output\":\"** using staged installation\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** R\\n\"},{\"type\":1,\"output\":\"** inst\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** byte-compile and prepare package for lazy loading\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"Note: possible error in 'occFilter(df = output$occTest_full, ': unused argument (level = 1) at F_wrappers.R:45 \\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** help\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"*** installing help indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** building package indices\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** installing vignettes\\n\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from temporary location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package can be loaded from final location\\n\"},{\"type\":1,\"output\":\"\"},{\"type\":1,\"output\":\"** testing if installed package keeps a record of temporary installation path\\n\"},{\"type\":1,\"output\":\"* DONE (occTest)\\n\"},{\"type\":1,\"output\":\"\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"0f8e652e3d2040f8a1dcd218a7c27125\",\"input\":\"countryStatusRange\",\"path\":\"~/Github/occClassifyR\",\"regex\":false,\"ignoreCase\":true,\"results\":{\"file\":[\"~/Github/occClassifyR/man/setTestTypes.Rd\",\"~/Github/occClassifyR/man/countryStatusRangeAnalysis.Rd\",\"~/Github/occClassifyR/man/countryStatusRangeAnalysis.Rd\",\"~/Github/occClassifyR/man/countryStatusRangeAnalysis.Rd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR2.Rmd\",\"~/Github/occClassifyR/vignettes/Intro_occProfileR.Rmd\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow_f2.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_workflow.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_defaultSettings.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_Analysis.R\",\"~/Github/occClassifyR/R/F_qualifiers.R\",\"~/Github/occClassifyR/R/F_qualifiers.R\",\"~/Github/occClassifyR/NAMESPACE\",\"~/Github/occClassifyR/inst/ext/fieldMetadata.csv\",\"~/Github/occClassifyR/inst/ext/fieldMetadata.csv\",\"~/Github/occClassifyR/inst/ext/fieldMetadata.csv\"],\"line\":[8,3,4,7,292,143,98,99,100,101,102,103,471,472,476,436,533,534,538,544,545,552,553,554,558,559,766,57,200,260,356,270,285,286,288,289,291,292,294,371,372,373,374,375,376,406,12,29,6,8,9,10],\"lineValue\":[\"countryStatusRange = T,\",\"\\\\name{countryStatusRangeAnalysis}\",\"\\\\alias{countryStatusRangeAnalysis}\",\"countryStatusRangeAnalysis(\",\"| countryStatusRangeAnalysis    | Checks three things: is the species in the native range country ? is the species in the invasive range country? is the species recorded in a country different than the country extracted from coordinates? |  by default (unless excludeUnknownRanges= T OR excludeNotmat...\",\"| countryStatusRangeAnalysis    | Checks three things: is the species in the native range country ? is the species in the invasive range country? is the species recorded in a country different than the country extracted from coordinates? |  by default (unless excludeUnknownRanges= T OR excludeNotmat...\",\"countries.shapefile = analysisSettings$countryStatusRange$countries.shapefile\",\"countryfield.shapefile = analysisSettings$countryStatusRange$countryfield.shapefile\",\"doRangeAnalysis = analysisSettings$countryStatusRange$doRangeAnalysis\",\"excludeUnknownRanges = analysisSettings$countryStatusRange$excludeUnknownRanges\",\"excludeNotmatchCountry = analysisSettings$countryStatusRange$excludeNotmatchCountry\",\"doCountryRecordAnalysis = analysisSettings$countryStatusRange$doCountryRecordAnalysis\",\"tictoc:::tic('Resolving countryStatusRange Analysis')\",\"message('Resolving countryStatusRange Analysis started...')\",\"Analysis.F=countryStatusRangeAnalysis(df=dat,\",\"Analysis.F <-occTest::countryStatusRangeAnalysis(df=dat,\",\"a = dat$countryStatusRangeAnalysis_wrongNTV_test ; a[is.na(a)] <- 0\",\"b = dat$countryStatusRangeAnalysis_wrongINV_test ; b[is.na(b)] <- 0\",\"Analysis.5 <- data.frame (countryStatusRangeAnalysis_notinKnownRange_test=Analysis.5, countryStatusRangeAnalysis_notinKnownRange_comments='')\",\"Analysis.5 <- data.frame (countryStatusRangeAnalysis_notinKnownRange=NA,\",\"countryStatusRangeAnalysis_notinKnownRange_comments='unkonown ranges are classifed as F directly',\",\"Analysis.6 = dat$countryStatusRangeAnalysis_wrongCTRY_test\",\"Analysis.6 <- data.frame (countryStatusRangeAnalysis_wrongReportCtry_test=Analysis.6,\",\"countryStatusRangeAnalysis_wrongReportCtry_comments='')\",\"Analysis.6 <- data.frame (countryStatusRangeAnalysis_wrongReportCtry=NA,\",\"countryStatusRangeAnalysis_wrongReportCtry_comments='Analysis not performed',\",\"\\\"countryStatusRangeAnalysis_score\\\", \\\"centroidDetection_score\\\" ,\\\"HumanDetection_score\\\" ,\\\"institutionLocality_score\\\",\",\"countryStatusRange = list (\",\"setTestTypes <- function (countryStatusRange = T,\",\"newParamsList = setTestTypes(countryStatusRange = unique (newSettings$activate [which (newSettings$testType == 'countryStatusRange')]),\",\"countryStatusRange = list (\",\"countryStatusRangeAnalysis=function(df=dat,\",\"df$countryStatusRange_wrongNTV_value   <- NA\",\"df$countryStatusRange_wrongNTV_test   <- NA\",\"df$countryStatusRange_wrongCTRY_value  <- NA\",\"df$countryStatusRange_wrongCTRY_test  <- NA\",\"df$countryStatusRange_wrongINV_value <- NA\",\"df$countryStatusRange_wrongINV_test  <- NA\",\"df$countryStatusRange_score <-NA\",\"df$countryStatusRange_wrongNTV_value   <- wrong.ntv.ctry.xy\",\"df$countryStatusRange_wrongNTV_test   <- as.logical (wrong.ntv.ctry.xy)\",\"df$countryStatusRange_wrongCTRY_value  <- wrong.ctry.reported\",\"df$countryStatusRange_wrongCTRY_test  <- as.logical (wrong.ctry.reported)\",\"df$countryStatusRange_wrongINV_value   <- wrong.inv.ctry.xy\",\"df$countryStatusRange_wrongINV_test   <- as.logical (wrong.inv.ctry.xy)\",\"df$countryStatusRange_score = occTest:::.gimme.score (df)\",\"range.info <- df$countryStatusRangeAnalysis_wrongINV_test\",\"range.info <- df$countryStatusRangeAnalysis_wrongNTV_test\",\"export(countryStatusRangeAnalysis)\",\"classify,geo,countryStatusRange,wrongNTV,,,\",\"classify,geo,countryStatusRange,wrongCTRY,,,\",\"classify,geo,countryStatusRange,wrongINV,,,\"],\"matchOn\":[[0],[6],[7],[0],[2],[2],[39],[42],[35],[40],[42],[43],[24],[19],[11],[22],[8],[8],[26,86],[26],[0],[17],[26],[0],[26],[0],[1],[0],[26],[29,112],[0],[0],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[17],[17],[7],[13],[13],[13]],\"matchOff\":[[18],[24],[25],[18],[20],[20],[57],[60],[53],[58],[60],[61],[42],[37],[29],[40],[26],[26],[44,104],[44],[18],[35],[44],[18],[44],[18],[19],[18],[44],[47,130],[18],[18],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[35],[35],[25],[31],[31],[31]],\"replaceMatchOn\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"replaceMatchOff\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"
